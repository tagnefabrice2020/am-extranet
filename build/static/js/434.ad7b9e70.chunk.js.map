{"version":3,"file":"static/js/434.ad7b9e70.chunk.js","mappings":"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","sources":["components/Pagination.js","components/TableLoader/index.js","services/AppointementService.js","redux/Apppointment/AppointmentActionCreators.js","views/pages/appointments/ListOfAppointments.js"],"sourcesContent":["const Pagination = ({currentPage, onPageChange, itemsPerPage, length }) => {\n    //const pagesCount = Math.ceil(length / itemsPerPage);\n\n    \n    return (\n        <ul className=\"pagination mb-3\" style={{margin: `0 auto`, width: `300px`, display: `flex`, justifyContent: `center`}}>\n            <li className=\"page-item\">\n                <button className=\"page-link\"\n                    style={{border: `1px solid`, borderRight: 'none'}}\n                    onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1 ? true : false}\n                >«</button>\n            </li>\n            <li className=\"page-item\"><span className=\"page-link\">{currentPage}</span></li>\n            <li className=\"page-item\"><span className=\"page-link\"> Sur </span></li>\n            <li className=\"page-item\"><span className=\"page-link\">{length === 0 ? 1 : length}</span></li>\n            <li className=\"page-item\"> \n                <button className=\"page-link\"\n                    style={{border: `1px solid`, borderLeft: `none`}}\n                    onClick={() => {\n                        onPageChange(currentPage + 1);\n                    }} disabled={currentPage === length || length === 0 ? true : false}\n                >»</button>\n            </li>\n        </ul>\n    );\n}\n\nexport default Pagination;","import React from 'react';\nimport './index.css';\n\nconst TableLoader = () => {\n    return (\n        <table  cellPadding=\"0\" cellSpacing=\"0\" width=\"100%\" className=\"w3samples_table_loader\">\n            <thead>\n                <tr>\n                    <th className=\"col1\">\n                        <span></span>\n                    </th>\n                    <th className=\"col4\">\n                        <span></span>\n                    </th>\n                    <th className=\"col5\">\n                        <span></span>\n                    </th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n            </tbody>\n           \n            \n        </table>\t\n    )\n}\n\nexport default TableLoader;","import axios from \"axios\";\nimport { API_URL } from \"../config\";\n\nclass AppontementService {\n\n    fetchAppointments (page, perPage) {\n        return axios.get(API_URL + `/appointments?page=${page}&perPage=${perPage}`)\n            .then((response) => {\n                return response.data.data;\n            })\n    }\n\n    search (search, page, perPage) {\n        console.log(search)\n        return axios.get(API_URL + `/appointments/${search}/search?page=${page}&perPage=${perPage}`)\n            .then((response) => {\n                return response.data.data;\n            });\n    }\n\n    store (appointment) {\n        return axios.post(API_URL + `/appointments`, appointment)\n            .then((response) => {\n                return response;\n            })\n    }\n\n    fetchOneAppointment (uuid) {\n        return axios.get(API_URL + `/appointments/${uuid}/show`)\n            .then((response) => {\n                console.log(response.data)\n                return response.data.appointment;\n            })\n    }\n\n    update (appointment, uuid) {\n        console.log(uuid);\n        return axios.patch(API_URL + `/appointments/${uuid}/update`, appointment)\n            .then((response) => {\n                return response\n            })\n    }\n}\n\nexport default new AppontementService();","import { toast } from \"react-toastify\"\nimport AppointementService from \"../../services/AppointementService\"\nimport { APPOINTMENT_CURRENT_PAGE, FETCH_APPOINTMENT_REQUEST, APPOINTMENT_PER_PAGE, FETCH_APPOINTMENT_SUCCESS, RESET_APPOINTMENT_FORM, STORING_APPOINTMENT, TOTAL_APPOINTMENT_PAGES, SEARCHING_APPOINTMENTS, SEARCH_APPOINTMENTS_SUCCESS, RESET_APPOINTMENTS, FETCH_ONE_APPOINTMENT_REQUEST, FETCH_ONE_APPOINTMENT_SUCCESS, FETCH_ONE_APPOINTMENT_ERROR } from \"./AppoinmentActionTypes\";\n\nexport const fetchAppointmentsRequest = () => {\n    return {\n        type: FETCH_APPOINTMENT_REQUEST\n    };\n}\n\nexport const setAppointmentPage = (page) => {\n    return {\n        type: APPOINTMENT_CURRENT_PAGE,\n        payload: page\n    };\n}\n\nexport const setAppointmentTotalPages = (pages) => {\n    return {\n        type: TOTAL_APPOINTMENT_PAGES,\n        payload: pages\n    };\n}\n\nexport const fetchAppointmentSuccess = (appointments) => {\n    return {\n        type: FETCH_APPOINTMENT_SUCCESS,\n        payload: appointments,\n    };\n}\n\nexport const storingAppointment = () => {\n    return {\n        type: STORING_APPOINTMENT\n    };\n}\n\nexport const resetAppointmentForm = () => {\n    return {\n        type: RESET_APPOINTMENT_FORM\n    };\n}\n\nexport const setAppointmentsPerPage = (per_page) => {\n    return {\n        type: APPOINTMENT_PER_PAGE,\n        payload: per_page\n    };\n}\n\nexport const searchingAppointments = (value) => {\n    return {\n        type: SEARCHING_APPOINTMENTS,\n        payload: value\n    };\n}\n\nexport const searchAppointmentSuccess = (appointments) => {\n    return {\n        type: SEARCH_APPOINTMENTS_SUCCESS,\n        payload: appointments\n    }\n}\n\n\nexport const resetAppointments = (initialAppointments) => {\n    return {\n        type: RESET_APPOINTMENTS,\n        payload: initialAppointments\n    };\n}\n\nexport const fetchOneAppointmentRequest = () => {\n    return {\n        type: FETCH_ONE_APPOINTMENT_REQUEST\n    };\n}\n\nexport const fetchOneAppointmentRequestSuccess = (appointment) => {\n    return {\n        type: FETCH_ONE_APPOINTMENT_SUCCESS,\n        payload: appointment\n    };\n}\n\nexport const fetchOneAppointmentRequestError = () => {\n    return {\n        type: FETCH_ONE_APPOINTMENT_ERROR\n    };\n}\n\n\nexport const storeAppointment = (appointment) => {\n    return dispatch => {\n        dispatch(storingAppointment());\n        AppointementService.store(appointment)\n            .then(response => {\n                if (response.status === 201) {\n                    dispatch(resetAppointmentForm());\n                    toast.success('Rendez-vous ajouter avec succèss.');\n                    return Promise.resolve();\n                }\n            }, error => {\n                toast.error('Une erreur c\\'est produit pendant l\\'ajouter du rendez-vous.');\n                toast.error('Veuillez contacter le service de maintenance.');\n            })\n    }\n}\n\nexport const fetchAppointments = (page, perPage) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const appointments = state.appointments;\n        if (appointments.searchValue.length <= 0) {\n            dispatch(fetchAppointmentsRequest()); // fetchingAppointments\n            AppointementService.fetchAppointments(page, perPage)\n                .then((appointments) => {\n                    dispatch(setAppointmentTotalPages(appointments.last_page));\n                    dispatch(setAppointmentsPerPage(appointments.per_page));\n                    dispatch(fetchAppointmentSuccess(appointments.data));\n                    return Promise.resolve();\n                }, () => {\n                    toast.error('Une erreur est souvenue lors du chargement des rendez-vous.');\n                    toast.error('Veuillez contacter le service de maintenance.');\n                    return Promise.reject();\n                })\n        }\n    }\n}\n\nexport const searchAppointments = (page, perPage) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const appointments = state.appointments;\n        if (appointments.searchValue.length > 0) {\n            AppointementService.search(appointments.searchValue, page, perPage) \n                .then((response) => {\n                    console.log(response); \n                    console.log(appointments);\n                    const totalPage = Math.ceil(response.total / response.per_page); \n                    dispatch(setAppointmentPage(response.current_page)); \n                    dispatch(setAppointmentsPerPage(response.per_page));\n                    dispatch(setAppointmentTotalPages(totalPage));\n                    dispatch(searchAppointmentSuccess(response.data));\n                    return Promise.resolve();\n                }, () => {\n                    toast.error('Une erreur est souvenue lors du chargement des rendez-vous.');\n                    toast.error('Veuillez contacter le service de maintenance.');\n                    return Promise.reject();\n                })\n        } else {\n            dispatch(resetAppointments(appointments.initialAppointments));\n            dispatch(setAppointmentTotalPages(appointments.initialTotalPages));\n        }\n    }\n}\n\nexport const fetchOneAppointment = (uuid) => {\n    return dispatch => {\n        dispatch(fetchOneAppointmentRequest());\n        AppointementService.fetchOneAppointment(uuid)\n            .then((appointment) => {\n                dispatch(fetchOneAppointmentRequestSuccess(appointment))\n                console.log(appointment);\n                return Promise.resolve();\n            }, error => {\n                dispatch(fetchOneAppointmentRequestError());\n                toast.error('Impossible de charger les information du rendez-vous.');\n                return Promise.reject();\n            })\n    }\n}\n\nexport const updateAppointment = (appointment, uuid) => {\n    return dispatch => {\n        AppointementService.update(appointment, uuid)\n            .then((response) => {\n                console.log(response);\n                if(response.status === 200) {\n                    toast.success('Rendez-vous enregistrer avec success.');\n                }\n            }, \n            error => {\n                console.log(error)\n            })\n    }\n}","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\";\nimport Pagination from \"../../../components/Pagination\";\nimport TableLoader from \"../../../components/TableLoader\";\nimport { fetchAppointments, setAppointmentPage, setAppointmentsPerPage, searchingAppointments, searchAppointments } from \"../../../redux/Apppointment/AppointmentActionCreators\";\n\nconst ListOfAppointments = ({ fetchAppointments, appointments, setAppointmentPage, setAppointmentsPerPage, searchingAppointments, searchAppointments }) => {\n\n    useEffect(() => {\n        if (appointments.searchValue.length > 0) {\n            const timer = setTimeout(() => {\n                searchAppointments(appointments.currentPage, parseInt(appointments.perPage));\n            }, 1500);\n            return () => clearTimeout(timer);\n        }\n        else { fetchAppointments(appointments.currentPage, parseInt(appointments.perPage)); }\n\n    }, [appointments.currentPage, appointments.perPage, appointments.searchValue, fetchAppointments, searchAppointments]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            searchAppointments(appointments.currentPage, parseInt(appointments.perPage));\n        }, 1500);\n        return () => clearTimeout(timer);\n    }, [appointments.searchValue, appointments.currentPage, appointments.perPage, searchAppointments]);\n\n    return (\n\n        <div className=\"content-wrapper\">\n            {/* Content Header (Page header) */}\n            <div className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1 className=\"m-0\">Listes des rendez-vous</h1>\n                        </div> {/* /.col */}\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\"><Link to=\"/\">Rendez-vous</Link></li>\n                                <li className=\"breadcrumb-item active\">List</li>\n                            </ol>\n                        </div> {/* /.col */}\n                    </div> {/* /.row */}\n                </div> {/* /.container-fluid */}\n            </div>\n            {/* /.content-header */}\n\n            {/* Main content*/}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {/* Small boxes (Stat box) */}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        <select className=\"form-control\"\n                                            style={{\n                                                padding: `0.175rem`,\n                                                height: `calc(1.8125rem + 2px)`,\n                                            }}\n                                            onChange={(event) => {\n                                                setAppointmentsPerPage(event.target.value);\n                                                setAppointmentPage(1);\n                                            }}\n                                        >\n                                            <option value='5'>5</option>\n                                            <option value='10'>10</option>\n                                            <option value='15'>15</option>\n                                        </select>\n                                    </h3>\n\n                                    <div className=\"card-tools\">\n                                        <div className=\"input-group input-group-sm\">\n                                            <input\n                                                type=\"text\"\n                                                name=\"table_search\"\n                                                className=\"form-control float-right\"\n                                                placeholder=\"Recherche\"\n                                                onChange={async (event) => {\n                                                    searchingAppointments(event.target.value);\n                                                    setAppointmentPage(1)\n                                                }}\n                                            />\n\n                                            <div className=\"input-group-append\">\n                                                <button type=\"submit\" className=\"btn btn-default\">\n                                                    {!appointments.searching &&\n                                                        <i className=\"fas fa-search\"></i>\n                                                    }\n                                                    {appointments.searching &&\n                                                        <div className=\"spinner-border\" role=\"status\">\n                                                            <span className=\"sr-only\"></span>\n                                                        </div>\n                                                    }\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    {appointments.loading &&\n                                        <TableLoader />\n                                    }\n                                    {!appointments.loading && appointments.appointments.length > 0 &&\n                                        <table className=\"table table-head-fixed text-nowrap\">\n                                            <thead>\n                                                <tr>\n                                                    <th></th>\n                                                    <th>Lieu</th>\n                                                    <th>Agent</th>\n                                                    <th>Client</th>\n                                                    <th></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {appointments.appointments.map((appointment, key) =>\n                                                    <tr key={key}>\n                                                        <td>{((appointments.currentPage * appointments.perPage) - appointments.perPage) + key + 1}</td>\n                                                        <td>{appointment.property_adresse}, {appointment.property_postal_code} {appointment.property_city}</td>\n                                                        <td>{appointment.a_first_name} {appointment.a_first_name}</td>\n                                                        <td style={{ position: `relative` }}>\n                                                            <Tooltip>\n                                                                {appointment.lanlord_first_name} {appointment.lanlord_last_name}\n                                                                <Content>\n                                                                    <span>{appointment.lanlord_email}</span>\n                                                                </Content>\n                                                            </Tooltip>\n\n                                                        </td>\n                                                        <td><Link to={`/modifier/${appointment.uuid}/rendez-vous`}><i className=\"bi bi-pencil-square\" style={{ color: `#000` }}></i></Link></td>\n                                                    </tr>\n                                                )}\n\n                                            </tbody>\n                                        </table>\n                                    }\n                                    {!appointments.loading && appointments.appointments.length === 0 && appointments.totalPages <= 0 &&\n                                        <div style={{ margin: `0 auto`, maxWidth: `900px`, padding: `20px` }}>\n                                            <em style={{ color: `red`, textAlign: `center`, fontSize: `30px` }}>Oops aucun utilisateur n'a été trouver dans la base de donées!.</em>\n                                        </div>\n                                    }\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                            {/* /.card */}\n                            {!appointments.loading && appointments.appointments.length > 0 &&\n                                <Pagination\n                                    currentPage={appointments.currentPage}\n                                    onPageChange={setAppointmentPage}\n                                    itemsPerPage={appointments.perPage}\n                                    length={appointments.totalPages}\n                                />\n                            }\n                        </div>\n                    </div>\n                    {/* /.row (main row) */}\n\n                </div>{/* /.container-fluid */}\n            </section>\n            {/* /.content */}\n        </div>\n    )\n}\n\nconst Tooltip = styled.div`\n    cursor: pointer;\n    &:hover p {\n        display: block;\n    }\n`;\n\nconst Content = styled.p`\n    display: none;\n    border-radius: 6px;\n    padding: 4px;\n    position: absolute;\n    background: #fff;\n    border: 1px solid rgba(0,0,0,.5);\n    z-index: 111;\n    &::after {\n        content: \"\";\n        position: absolute;\n        height: 5px;\n        width: 5px;\n        background: #fff;\n        transform: rotate(45deg);\n        border-top: 1px solid rgba(0,0,0,.5);\n        border-left: 1px solid rgba(0,0,0,.5);\n        top: -3px;\n        left: 10px;\n    }\n`;\n\nconst mapStateToProps = (state) => {\n    return {\n        appointments: state.appointments\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        fetchAppointments: (currentPage, perPage) => dispatch(fetchAppointments(currentPage, perPage)),\n        setAppointmentPage: (page) => dispatch(setAppointmentPage(page)),\n        setAppointmentsPerPage: (per_page) => dispatch(setAppointmentsPerPage(per_page)),\n        searchingAppointments: (value) => dispatch(searchingAppointments(value)),\n        searchAppointments: (page, perPage) => dispatch(searchAppointments(page, perPage)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(ListOfAppointments);"],"names":["currentPage","onPageChange","length","itemsPerPage","className","style","margin","width","display","justifyContent","border","borderRight","onClick","disabled","borderLeft","cellPadding","cellSpacing","AppontementService","page","perPage","axios","API_URL","then","response","data","search","console","log","appointment","uuid","setAppointmentPage","type","APPOINTMENT_CURRENT_PAGE","payload","setAppointmentTotalPages","pages","TOTAL_APPOINTMENT_PAGES","setAppointmentsPerPage","per_page","APPOINTMENT_PER_PAGE","searchingAppointments","value","SEARCHING_APPOINTMENTS","storeAppointment","dispatch","STORING_APPOINTMENT","AppointementService","store","status","RESET_APPOINTMENT_FORM","toast","Promise","resolve","error","fetchAppointments","getState","appointments","searchValue","FETCH_APPOINTMENT_REQUEST","last_page","FETCH_APPOINTMENT_SUCCESS","fetchAppointmentSuccess","reject","searchAppointments","initialAppointments","totalPage","Math","ceil","total","current_page","SEARCH_APPOINTMENTS_SUCCESS","searchAppointmentSuccess","RESET_APPOINTMENTS","initialTotalPages","fetchOneAppointment","FETCH_ONE_APPOINTMENT_REQUEST","FETCH_ONE_APPOINTMENT_SUCCESS","fetchOneAppointmentRequestSuccess","FETCH_ONE_APPOINTMENT_ERROR","updateAppointment","update","Tooltip","styled","Content","connect","state","useEffect","timer","setTimeout","parseInt","clearTimeout","to","padding","height","onChange","event","target","name","placeholder","searching","role","loading","map","key","property_adresse","property_postal_code","property_city","a_first_name","position","lanlord_first_name","lanlord_last_name","lanlord_email","color","totalPages","maxWidth","textAlign","fontSize"],"sourceRoot":""}