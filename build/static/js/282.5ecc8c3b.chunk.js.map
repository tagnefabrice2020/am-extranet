{"version":3,"file":"static/js/282.5ecc8c3b.chunk.js","mappings":"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","sources":["components/Pagination.js","components/TableLoader/index.js","services/UserService.js","redux/User/UserActionCreators.js","views/pages/users/ListOfUsers.js"],"sourcesContent":["const Pagination = ({currentPage, onPageChange, itemsPerPage, length }) => {\n    //const pagesCount = Math.ceil(length / itemsPerPage);\n\n    \n    return (\n        <ul className=\"pagination mb-3\" style={{margin: `0 auto`, width: `300px`, display: `flex`, justifyContent: `center`}}>\n            <li className=\"page-item\">\n                <button className=\"page-link\"\n                    style={{border: `1px solid`, borderRight: 'none'}}\n                    onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1 ? true : false}\n                >«</button>\n            </li>\n            <li className=\"page-item\"><span className=\"page-link\">{currentPage}</span></li>\n            <li className=\"page-item\"><span className=\"page-link\"> Sur </span></li>\n            <li className=\"page-item\"><span className=\"page-link\">{length === 0 ? 1 : length}</span></li>\n            <li className=\"page-item\"> \n                <button className=\"page-link\"\n                    style={{border: `1px solid`, borderLeft: `none`}}\n                    onClick={() => {\n                        onPageChange(currentPage + 1);\n                    }} disabled={currentPage === length || length === 0 ? true : false}\n                >»</button>\n            </li>\n        </ul>\n    );\n}\n\nexport default Pagination;","import React from 'react';\nimport './index.css';\n\nconst TableLoader = () => {\n    return (\n        <table  cellPadding=\"0\" cellSpacing=\"0\" width=\"100%\" className=\"w3samples_table_loader\">\n            <thead>\n                <tr>\n                    <th className=\"col1\">\n                        <span></span>\n                    </th>\n                    <th className=\"col4\">\n                        <span></span>\n                    </th>\n                    <th className=\"col5\">\n                        <span></span>\n                    </th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"col1\">\n                        <span></span>\n                    </td>\n                    <td className=\"col4\">\n                        <span></span>\t\t\t\n                    </td>\n                    <td className=\"col5\">\n                        <span></span>\n                    </td>\n                </tr>\n            </tbody>\n           \n            \n        </table>\t\n    )\n}\n\nexport default TableLoader;","import axios from \"axios\";\nimport { API_URL } from \"../config\";\n\nclass UserService {\n    fetchUsers (page, perPage) {\n        return axios.get(API_URL + `/users?page=${page}&perPage=${perPage}`)\n            .then((response) => {\n                const users = response.data.data;\n                return users;\n            })\n    }\n\n    store (user) {\n        return axios.post(API_URL + '/users', user)\n            .then((response) => {\n                return response;\n            })\n    }\n\n    search (value, page, perPage) {\n        return axios.get(API_URL + `/users/${value}/search?page=${page}&perPage=${perPage}`)\n            .then((response) => {\n                const users = response.data.data;\n                return users;\n            })\n    }\n\n    switchStatus (uuid) {\n        return axios.patch(API_URL + `/users/${uuid}/status`)\n            .then((response) => {\n                return response;\n            })\n    }\n\n    fetchOneUser (uuid) {\n        return axios.get(API_URL + `/users/${uuid}/show`)\n            .then((response) => {\n                return response.data.user;\n            })\n    }\n\n    updateUser (user, uuid) {\n        return axios.patch(API_URL + `/users/${uuid}/update`, user)\n            .then((response) => {\n                return response\n            })\n    } \n\n}\n\nexport default new UserService();","\nimport { toast } from 'react-toastify';\nimport UserService from \"../../services/UserService\";\nimport { FETCH_ONE_USER_ERROR, FETCH_ONE_USER_SUCCESS, FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USER_FAILURE, ONE_USER_REQUEST, RESET, RESET_FORM, SEARCHING, SEARCH_SUCCESS, STORE_USER_ERROR, STORING_USER, SWITCH_STATUS, TOTAL_PAGES, USERS_CURRENT_PAGE, USERS_PER_PAGE } from \"./UserActionTypes\"\n\nexport const fetchUsersRequest = () => {\n    return {\n        type: FETCH_USERS_REQUEST\n    };\n}\n\nexport const fetchUsersSuccess = (users) => {\n    return {\n        type: FETCH_USERS_SUCCESS,\n        payload: users\n    };\n}\n\nexport const fetchUsersFailure = (error) => {\n    return {\n        type: FETCH_USER_FAILURE,\n        payload: error\n    };\n}\n\nexport const setUsersPerPage = (perPage) => {\n    return {\n        type: USERS_PER_PAGE,\n        payload: perPage\n    };\n}\n\nexport const setPage = (page) => {\n    return {\n        type: USERS_CURRENT_PAGE,\n        payload: page\n    };\n}\n\nexport const setTotalPage = (total) => {\n    return {\n        type: TOTAL_PAGES,\n        payload: total\n    };\n}\n\nexport const searching = (value) => {\n    return {\n        type: SEARCHING,\n        payload: value\n    };\n}\n\nexport const searchSuccess = (users, last_page) => {\n    return {\n        type: SEARCH_SUCCESS,\n        payload: users, \n        last_page: last_page\n        \n    }\n}\n\nexport const reset = (initialUsers) => {\n    return {\n        type: RESET,\n        payload: initialUsers\n    };\n}\n\nexport const storingUser = () => {\n    return {\n        type: STORING_USER\n    };\n}\n\nexport const resetForm = () => {\n    return {\n        type: RESET_FORM\n    };\n}\n\nexport const storeUserError = () => {\n    return {\n        type: STORE_USER_ERROR\n    };\n}\n\nexport const switchStatus = (uuid) => {\n    return {\n        type: SWITCH_STATUS,\n        payload: uuid\n    };\n}\n\nexport const fetchOneUserRequest = () => {\n    return {\n        type: ONE_USER_REQUEST\n    };\n}\n\nexport const fetchOneUserRequestSucces = (user) => {\n    return {\n        type: FETCH_ONE_USER_SUCCESS,\n        payload: user\n    }\n}\n\nexport const fetchSingleUserFailed = () => {\n    return {\n        type: FETCH_ONE_USER_ERROR\n    }\n}\n\n\nexport const fetchUsers = (page, perPage) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const users = state.users;\n        dispatch(fetchUsersRequest());\n        if (users.searchValue.length <= 0)  {\n            UserService.fetchUsers(page, perPage)\n                .then((users) => {\n                    //console.log(users)\n                    const totalPage = Math.ceil(users.total / users.per_page);\n                    dispatch(setPage(users.current_page));\n                    dispatch(setUsersPerPage(users.per_page));\n                    dispatch(setTotalPage(totalPage));\n                    dispatch(fetchUsersSuccess(users.data, users.last_page));\n                    return Promise.resolve();\n                }, \n                (error) => {\n                    dispatch(fetchUsersFailure(error.message));\n                    return Promise.reject();\n                })\n        } \n    } \n}\n\nexport const searchUsers = (page, perPage) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const users = state.users;\n        if (users.searchValue.length > 0) {\n            UserService.search(users.searchValue, page, perPage)\n                .then((users) => {\n                    const totalPage = Math.ceil(users.total / users.per_page);\n                    dispatch(setPage(users.current_page));\n                    dispatch(setUsersPerPage(users.per_page));\n                    dispatch(setTotalPage(totalPage));\n                    dispatch(searchSuccess(users.data));\n                    return Promise.resolve(); \n                }, \n                (error) => {\n                    dispatch(fetchUsersFailure(error.message));\n                    return Promise.reject();\n                })\n        } else {\n            dispatch(reset(users.initialUsers));\n            dispatch(setTotalPage(users.initialTotalPages));\n        }\n    }\n}\n\nexport const storeUser = (user) => {\n    return (dispatch) => {\n        dispatch(storingUser());\n        UserService.store(user)\n            .then((response) => {\n                if(typeof(response.data) === 'string' && response.data === 'success') {\n                    dispatch(resetForm());\n                    toast.success('Utilisateur ajouter avec sucèss.');\n                    return Promise.resolve();\n                }\n            },\n            (error) => {\n                toast.error('La sauvegarde de l\\'utilisateur a échouée.');\n                return Promise.reject();\n            })\n\n    }\n}\n\nexport const fetchOneUser = (user) => {\n    return dispatch => {\n        dispatch(fetchOneUserRequest());\n        UserService.fetchOneUser(user)\n            .then((user) => {\n                dispatch(fetchOneUserRequestSucces(user));\n                return Promise.resolve();\n            }, error => {\n                dispatch(fetchSingleUserFailed());\n                toast.error('Impossible de charger les information de l\\'utilisateur.');\n            })\n    }\n}\n\nexport const switchUserStatus = (uuid) => {\n    return dispatch => {\n        UserService.switchStatus(uuid)\n            .then((response) => {\n                if(response.status === 201) {\n                    dispatch(switchStatus(uuid));\n                    toast.success('Le status de l\\'utilisateur a été changer.');\n                }\n            }, (error) => {\n                toast.error('Le status de l\\'utilisateur n\\'a pas été changer.');\n            })\n    }\n}\n\nexport const updateUser = (user, uuid) => {\n    return dispatch => {\n        UserService.updateUser(user, uuid)\n            .then((response) => {\n                if(response.status === 200) {\n                    toast.success('L\\'utilisateur enregistrer avec sucess.');\n                }\n            }, (error) => {\n                console.log(error)\n            })\n    }\n}\n\n\nexport const test = (user) => {\n    return (dispatch, getState) => {\n        console.log(user)\n        const state = getState();\n        dispatch(searchSuccess({}));\n        console.log(state);\n    }\n}\n\n\n/*\nconst state = getState();\n        console.log(state.users.searchValue);\n        if (state.users.searchValue.length > 0) {\n            UserService.search(state.users.searchValue, page, perPage)\n                .then((users) => {\n                    dispatch(searchSuccess(users.data));\n                    return Promise.resolve();\n                }, (error) => {\n                    return Promise.reject();\n                })\n        } else {\n            dispatch(reset(state.users.initialUsers));\n        }*/","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport Pagination from \"../../../components/Pagination\"\nimport TableLoader from \"../../../components/TableLoader\"\nimport { fetchUsers, searching, searchUsers, setPage, setUsersPerPage, switchUserStatus, test } from \"../../../redux/User/UserActionCreators\"\n\n\nconst ListOfUsers = ({ fetchUsers, users, searchUsers, setUsersPerPage, setPage, searching, switchUserStatus, test }) => {\n   \n    useEffect(() => {\n        if (users.searchValue.length > 0) {\n            const timer = setTimeout(() => {\n                searchUsers(users.currentPage, parseInt(users.perPage));\n            }, 1500);\n            return () => clearTimeout(timer);\n        }\n        else { fetchUsers(users.currentPage, parseInt(users.perPage)); }\n    }, [users.perPage, users.currentPage, fetchUsers, searchUsers, users.searchValue]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            searchUsers(users.currentPage, parseInt(users.perPage));\n        }, 1500);\n        return () => clearTimeout(timer);\n    }, [users.searchValue, users.currentPage, searchUsers, users.perPage]);\n\n    const setStatus = (uuid) => {\n        switchUserStatus(uuid);\n    }\n\n    return (\n        <div className=\"content-wrapper\">\n            {/* Content Header (Page header) */}\n            <div className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1 className=\"m-0\">Listes d'utilisateurs</h1>\n                        </div> {/* /.col */}\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">Utilisateurs</li>\n                                <li className=\"breadcrumb-item active\">List</li>\n                            </ol>\n                        </div> {/* /.col */}\n                    </div> {/* /.row */}\n                </div> {/* /.container-fluid */}\n            </div>\n            {/* /.content-header */}\n\n            {/* Main content*/}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {/* Small boxes (Stat box) */}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        <select className=\"form-control\"\n                                            style={{\n                                                padding: `0.175rem`,\n                                                height: `calc(1.8125rem + 2px)`,\n                                            }}\n                                            onChange={(event) => {\n                                                setUsersPerPage(event.target.value);\n                                                setPage(1);\n                                            }}\n                                        >\n                                            <option value='5'>5</option>\n                                            <option value='10'>10</option>\n                                            <option value='15'>15</option>\n                                        </select>\n                                    </h3>\n\n                                    <div className=\"card-tools\">\n                                        <div className=\"input-group input-group-sm\" style={{ width: `150px` }}>\n                                            <input\n                                                type=\"text\"\n                                                name=\"table_search\"\n                                                className=\"form-control float-right\"\n                                                placeholder=\"Recherche\"\n                                                onChange={async (event) => {\n                                                    searching(event.target.value);\n                                                    setPage(1)\n                                                }}\n                                            />\n\n                                            <div className=\"input-group-append\">\n\n                                                <button type=\"submit\" className=\"btn btn-default\">\n                                                    {!users.searching &&\n                                                        <i className=\"fas fa-search\"></i>\n                                                    }\n                                                    {users.searching &&\n                                                        <div className=\"spinner-border\" role=\"status\">\n                                                            <span className=\"sr-only\"></span>\n                                                        </div>\n                                                    }\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    {users.loading &&\n                                        <TableLoader />\n                                    }\n                                    {!users.loading && users.users.length > 0 &&\n                                        <table className=\"table table-head-fixed text-nowrap\">\n                                            <thead>\n                                                <tr>\n                                                    <th></th>\n                                                    <th><em>Nom</em></th>\n                                                    <th>Email</th>\n                                                    <th>Role</th>\n                                                    <th></th>\n                                                    <th></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n\n                                                {users.users.map((user, key) =>\n                                                    <tr key={key}>\n                                                        <td>{((users.currentPage * users.perPage) - users.perPage) + key + 1}</td>\n                                                        <td>{user.first_name} {user.last_name}</td>\n                                                        <td>{user.email}</td>\n                                                        <td> {/**{`badge ${user.role === 'adminitrateur' ? } `} **/}\n                                                            <span className={`badge ${user.role === 'administrateur' ? \"badge-primary\" : user.role === 'agent' ? \"badge-info\" :  user.role === 'client' ? \"badge-success\" : user.role === 'salarié' ? \"badge-dark\" : null} `}>\n                                                                {user.role}\n                                                            </span>\n                                                        </td>\n                                                        <td><Link to={`/modifier/${user.uuid}/utilisateur`}><i className=\"bi bi-pencil-square\" style={{ color: `#000` }}></i></Link></td>\n                                                        <td>\n                                                            {user.active ? <button className=\"btn btn-sm btn-danger\" onClick={() => setStatus(user.uuid)}>desactiver</button> : <button className=\"btn btn-sm btn-success\" onClick={() => setStatus(user.uuid)}>activer</button>}\n                                                        </td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    }\n                                    {!users.loading && users.users.length === 0 && users.totalPages <= 0 &&\n                                        <div style={{ margin: `0 auto`, maxWidth: `900px`, padding: `20px` }}>\n                                            <em style={{ color: `red`, textAlign: `center`, fontSize: `30px` }}>Oops aucun utilisateur n'a été trouver dans la base de donées!.</em>\n                                        </div>\n                                    }\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                            {/* /.card */}\n                            {!users.loading && users.users.length > 0 &&\n                                <Pagination\n                                    currentPage={users.currentPage}\n                                    onPageChange={setPage}\n                                    itemsPerPage={users.perPage}\n                                    length={users.totalPages}\n                                />\n                            }\n                        </div>\n                    </div>\n                    {/* /.row (main row) */}\n                </div>{/* /.container-fluid */}\n            </section>\n            {/* /.content */}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUsers: (currentPage, perPage) => dispatch(fetchUsers(currentPage, perPage)),\n        setUsersPerPage: (perPage) => dispatch(setUsersPerPage(perPage)),\n        setPage: (page) => dispatch(setPage(page)),\n        searching: (value) => dispatch(searching(value)),\n        searchUsers: (currentPage, perPage) => dispatch(searchUsers(currentPage, perPage)),\n        switchUserStatus: (uuid) => dispatch(switchUserStatus(uuid)),\n        test: () => dispatch(test())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfUsers);"],"names":["currentPage","onPageChange","length","itemsPerPage","className","style","margin","width","display","justifyContent","border","borderRight","onClick","disabled","borderLeft","cellPadding","cellSpacing","UserService","page","perPage","axios","API_URL","then","response","data","user","value","uuid","fetchUsersFailure","error","type","FETCH_USER_FAILURE","payload","setUsersPerPage","USERS_PER_PAGE","setPage","USERS_CURRENT_PAGE","setTotalPage","total","TOTAL_PAGES","searching","SEARCHING","searchSuccess","users","last_page","SEARCH_SUCCESS","fetchUsers","dispatch","getState","FETCH_USERS_REQUEST","searchValue","totalPage","Math","ceil","per_page","current_page","FETCH_USERS_SUCCESS","fetchUsersSuccess","Promise","resolve","message","reject","searchUsers","initialUsers","RESET","initialTotalPages","storeUser","STORING_USER","RESET_FORM","toast","fetchOneUser","ONE_USER_REQUEST","FETCH_ONE_USER_SUCCESS","fetchOneUserRequestSucces","FETCH_ONE_USER_ERROR","switchUserStatus","status","SWITCH_STATUS","switchStatus","updateUser","console","log","test","state","connect","useEffect","timer","setTimeout","parseInt","clearTimeout","setStatus","padding","height","onChange","event","target","name","placeholder","role","loading","map","key","first_name","last_name","email","to","color","active","totalPages","maxWidth","textAlign","fontSize"],"sourceRoot":""}